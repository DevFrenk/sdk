"use strict";(self.webpackChunk_myparcelnl_php_sdk_docs=self.webpackChunk_myparcelnl_php_sdk_docs||[]).push([[249],{5666:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(5793).uE)('<h1 id="using-multiple-carriers" tabindex="-1"><a class="header-anchor" href="#using-multiple-carriers" aria-hidden="true">#</a> Using multiple carriers</h1><p>It is possible to use multiple carriers. The following carriers are supported:</p><table><thead><tr><th>ID</th><th>Name</th><th>Carrier class</th><th>Consignment class</th></tr></thead><tbody><tr><td>1</td><td>PostNL</td><td><code>Model\\Carrier\\CarrierPostNL</code></td><td><code>Model\\Consignment\\PostNLConsignment</code></td></tr><tr><td>2</td><td>Bpost</td><td><code>Model\\Carrier\\CarrierBpost</code></td><td><code>Model\\Consignment\\BpostConsignment</code></td></tr><tr><td>3</td><td>DPD</td><td><code>Model\\Carrier\\CarrierDPD</code></td><td><code>Model\\Consignment\\DPDConsignment</code></td></tr><tr><td>5</td><td>RedJePakketje</td><td><code>Model\\Carrier\\CarrierRedJePakketje</code></td><td><code>Model\\Consignment\\RedJePakketjeConsignment</code></td></tr></tbody></table><p>Please note, RedJePakketje is only available in the Netherlands as of now, and can only ship to Dutch addresses. You can query which carriers are available like this:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$options</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CarrierOptionsWebService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token operator">-&gt;</span><span class="token function">setApiKey</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;api_key_from_backoffice&#39;</span><span class="token punctuation">)</span>\n    <span class="token operator">-&gt;</span><span class="token function">getCarrierOptions</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;shop_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>You can get the required <code>shop_id</code> from <code>AccountWebService</code>, the only shop returned will be the shop belonging to the API key that is used. Since the <code>shop_id</code> will not change unless the API key changes, we advise you to store the <code>shop_id</code> until the user updates the API key.</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$shop_id</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AccountWebService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token operator">-&gt;</span><span class="token function">setApiKey</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;api_key_from_backoffice&#39;</span><span class="token punctuation">)</span>\n    <span class="token operator">-&gt;</span><span class="token function">getAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token operator">-&gt;</span><span class="token function">getShops</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token operator">-&gt;</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="create-a-consignment-for-each-carrier-manually" tabindex="-1"><a class="header-anchor" href="#create-a-consignment-for-each-carrier-manually" aria-hidden="true">#</a> Create a consignment for each carrier manually:</h4><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$postNL</span>        <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Consignment<span class="token punctuation">\\</span>PostNLConsignment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$bpost</span>         <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Consignment<span class="token punctuation">\\</span>BpostConsignment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$dpd</span>           <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Consignment<span class="token punctuation">\\</span>DPDConsignment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$redJePakketje</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Consignment<span class="token punctuation">\\</span>RedJePakketjeConsignment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Or by using <code>Factory\\ConsignmentFactory</code> with a carrier ID or name, making it easier to dynamically instantiate a consignment:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>Factory<span class="token punctuation">\\</span>ConsignmentFactory</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Carrier<span class="token punctuation">\\</span>CarrierBpost</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Carrier<span class="token punctuation">\\</span>CarrierPostNL</span><span class="token punctuation">;</span>\n\n<span class="token variable">$postNL</span> <span class="token operator">=</span> <span class="token class-name static-context">ConsignmentFactory</span><span class="token operator">::</span><span class="token function">createByCarrierId</span><span class="token punctuation">(</span><span class="token class-name static-context">CarrierPostNL</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$bpost</span>  <span class="token operator">=</span> <span class="token class-name static-context">ConsignmentFactory</span><span class="token operator">::</span><span class="token function">createByCarrierName</span><span class="token punctuation">(</span><span class="token class-name static-context">CarrierBpost</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',11),t={},p=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}},928:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-45c9cc23",path:"/02.examples/02.using-multiple-carriers.html",title:"Using multiple carriers",lang:"en-US",frontmatter:{title:"Using multiple carriers"},excerpt:"",headers:[],filePathRelative:"02.examples/02.using-multiple-carriers.md",git:{updatedTime:1634804698e3}}}}]);